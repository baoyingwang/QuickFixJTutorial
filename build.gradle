apply plugin: 'java'

//source file dir is required to be specified, because current dir is not consistent with default gradle one
//the default gradle directoryies, either. read this url: http://blog.csdn.net/caolaosanahnu/article/details/17022321
//sourceSets { 
//	 main { 
//		 java.srcDir "$projectDir/src"
//	 } 
//	
//	 test{
//		 java.srcDir "$projectDir/test"
//	 }
//}
 
repositories { 
	 flatDir(dirs: "$projectDir/lib") 
	 mavenCentral()
} 

dependencies { 
	 compile ':log4j-api:+'
	 compile ':log4j-core:+'
	 compile ':apache-log4j-extras:+'
	 compile ':slf4j-api:+'
	 
	 compile ':guava:+'
	 compile ':bsh-core:+'

	 //compile("org.quickfixj:quickfixj-core:2.0.0")

	 compile ':quickfixj-core:1.6.0'
	 compile ':quickfixj-codegenerator:1.6.0'

	 compile ':mina-core:+'

	 testCompile 'junit:junit:4.8.2'
 } 
 
 
 task taskA{
 	println "i am task A, and do nothing but print this line"
 }
 
 
 //https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/testing/Test.html
 test {
	 
	 println "i am in test task"
	 // enable TestNG support (default is JUnit)
	 //useTestNG()
  
	 // set a system property for the test JVM(s)
	 systemProperty 'some.prop', 'value'
  
	 // explicitly include or exclude tests
	 //include 'org/foo/**'
	 //exclude 'org/boo/**'
  
	 // show standard out and standard error of the test JVM(s) on the console
	 testLogging.showStandardStreams = true
  
	 // set heap size for the test JVM(s)
	 minHeapSize = "128m"
	 maxHeapSize = "512m"
  
	 // set JVM arguments for the test JVM(s)
	 jvmArgs '-XX:MaxPermSize=256m'
  
	 // listen to events in the test execution lifecycle
	 beforeTest { descriptor ->
		logger.lifecycle("Running test: " + descriptor)
	 }
  
	 // listen to standard out and standard error of the test JVM(s)
	 onOutput { descriptor, event ->
		logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
	 }
   }
 
 //make sure test cases are executed - DONE
 //search 'test' as key word, you will find all test related tasks/sections
 //https://discuss.gradle.org/t/how-to-configure-test-src-dir/6829/2
 

 //sourceCompatibility and version cannot be defined in settings.gradle, because it will complain > No such property: version for class: org.gradle.initialization.DefaultSettings_Decorated
 //TODO support to read from jenkins
sourceCompatibility = 1.8

version = new Date().format('yyyy-MM-dd_HHmmss.S')
jar {
	 manifest {
		 attributes 'Implementation-Title': 'Baoying QuickfixJ Tutorial',
					'Implementation-Version': version
	 }
 }

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

//http://stackoverflow.com/questions/11474729/how-to-build-sources-jar-with-gradle
artifacts {
	//NOTE that java class jar would be build by default. Not required to add anything here
	//NOT easy to build javadoc, too.. refer the link.
	archives sourcesJar
}


